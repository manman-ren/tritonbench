#loc = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0)
#loc1 = loc(unknown)
#loc24 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1697:12)
#loc49 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":992:12)
#loc58 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:53)
#loc67 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":292:31)
#loc76 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":312:53)
#loc83 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":315:31)
#loc154 = loc(callsite(#loc49 at #loc24))
#loc190 = loc(callsite(#loc58 at #loc154))
#loc197 = loc(callsite(#loc67 at #loc154))
#loc205 = loc(callsite(#loc76 at #loc154))
#loc212 = loc(callsite(#loc83 at #loc154))
#loc228 = loc(callsite(#loc1 at #loc190))
#loc230 = loc(callsite(#loc1 at #loc197))
#loc232 = loc(callsite(#loc1 at #loc205))
#loc234 = loc(callsite(#loc1 at #loc212))
module {
  tt.func public @_attn_fwd_tma_ws_persistent(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg3: f32 loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg18: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg19: i32 loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0), %arg20: i32 {tt.divisibility = 16 : i32} loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1556:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant 1.44269502 : f32 loc(#loc1)
    %c64_i64 = arith.constant {async_task_id = dense<1> : vector<1xi32>} 64 : i64 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<64xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i64 = arith.constant 1 : i64 loc(#loc1)
    %c128_i64 = arith.constant 128 : i64 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc128)
    %0 = arith.addi %arg20, %c127_i32 : i32 loc(#loc128)
    %1 = arith.divsi %0, %c128_i32 : i32 loc(#loc129)
    %2 = tt.get_program_id x : i32 loc(#loc5)
    %3 = tt.get_num_programs x : i32 loc(#loc6)
    %4 = arith.muli %1, %arg18 : i32 loc(#loc7)
    %5 = arith.muli %4, %arg19 : i32 loc(#loc8)
    %6 = arith.divsi %5, %3 : i32 loc(#loc9)
    %7 = arith.remsi %5, %3 : i32 loc(#loc10)
    %8 = arith.cmpi slt, %2, %7 : i32 loc(#loc11)
    %9 = scf.if %8 -> (i32) {
      %17 = arith.addi %6, %c1_i32 : i32 loc(#loc13)
      scf.yield %17 : i32 loc(#loc13)
    } else {
      scf.yield %6 : i32 loc(#loc1)
    } loc(#loc12)
    %10 = arith.muli %arg18, %arg19 : i32 loc(#loc14)
    %11 = arith.muli %10, %arg20 : i32 loc(#loc15)
    %12 = tt.make_tensor_descriptor %arg1, [%11, %c128_i32], [%c128_i64, %c1_i64] : <bf16>, <tensor<128x128xbf16>> loc(#loc16)
    %13 = tt.make_tensor_descriptor %arg2, [%11, %c128_i32], [%c128_i64, %c1_i64] : <bf16>, <tensor<128x128xbf16>> loc(#loc17)
    %14 = tt.make_tensor_descriptor %arg0, [%11, %c128_i32], [%c128_i64, %c1_i64] : <bf16>, <tensor<64x128xbf16>> loc(#loc18)
    %15 = tt.make_tensor_descriptor %arg5, [%11, %c128_i32], [%c128_i64, %c1_i64] : <bf16>, <tensor<64x128xbf16>> loc(#loc19)
    %16 = scf.for %arg21 = %c0_i32 to %9 step %c1_i32 iter_args(%arg22 = %2) -> (i32)  : i32 {
      %17 = arith.remsi %arg22, %1 : i32 loc(#loc21)
      %18 = arith.divsi %arg22, %1 : i32 loc(#loc22)
      %19 = arith.divsi %18, %arg19 : i32 loc(#loc130)
      %20 = arith.remsi %18, %arg19 : i32 loc(#loc131)
      %21 = arith.extsi %19 : i32 to i64 loc(#loc132)
      %22 = arith.extsi %arg6 : i32 to i64 loc(#loc133)
      %23 = arith.muli %21, %22 : i64 loc(#loc133)
      %24 = arith.extsi %20 : i32 to i64 loc(#loc134)
      %25 = arith.extsi %arg7 : i32 to i64 loc(#loc135)
      %26 = arith.muli %24, %25 : i64 loc(#loc135)
      %27 = arith.addi %23, %26 : i64 loc(#loc136)
      %28 = arith.muli %17, %c128_i32 : i32 loc(#loc137)
      %29 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc138)
      %30 = tt.splat %28 : i32 -> tensor<64xi32> loc(#loc139)
      %31 = arith.addi %30, %29 : tensor<64xi32> loc(#loc139)
      %32 = arith.addi %28, %c64_i32 : i32 loc(#loc140)
      %33 = tt.splat %32 : i32 -> tensor<64xi32> loc(#loc141)
      %34 = arith.addi %33, %29 : tensor<64xi32> loc(#loc141)
      %35 = arith.mulf %arg3, %cst : f32 loc(#loc142)
      %36 = arith.extsi %arg8 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc143)
      %37 = arith.divsi %27, %36 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc143)
      %38 = arith.muli %17, %c128_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc144)
      %39 = arith.extsi %38 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc145)
      %40 = arith.addi %37, %39 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc145)
      %41 = arith.trunci %40 {async_task_id = dense<0> : vector<1xi32>} : i64 to i32 loc(#loc146)
      %42 = tt.descriptor_load %14[%41, %c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.tensordesc<tensor<64x128xbf16>> -> tensor<64x128xbf16> loc(#loc147)
      %43 = arith.extsi %arg8 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc148)
      %44 = arith.divsi %27, %43 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc148)
      %45 = arith.muli %17, %c128_i32 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc149)
      %46 = arith.extsi %45 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc150)
      %47 = arith.addi %44, %46 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc150)
      %48 = arith.addi %47, %c64_i64 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc151)
      %49 = arith.trunci %48 {async_task_id = dense<1> : vector<1xi32>} : i64 to i32 loc(#loc152)
      %50 = tt.descriptor_load %14[%49, %c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.tensordesc<tensor<64x128xbf16>> -> tensor<64x128xbf16> loc(#loc153)
      %51:6 = scf.for %arg23 = %c0_i32 to %arg20 step %c128_i32 iter_args(%arg24 = %cst_2, %arg25 = %cst_0, %arg26 = %cst_1, %arg27 = %cst_2, %arg28 = %cst_0, %arg29 = %cst_1) -> (tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32>, tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32>)  : i32 {
        %82 = arith.extsi %arg11 {async_task_id = dense<4> : vector<1xi32>} : i32 to i64 loc(#loc183)
        %83 = arith.divsi %27, %82 {async_task_id = dense<4> : vector<1xi32>} : i64 loc(#loc183)
        %84 = arith.trunci %83 {async_task_id = dense<4> : vector<1xi32>} : i64 to i32 loc(#loc184)
        %85 = arith.addi %arg23, %84 {async_task_id = dense<4> : vector<1xi32>} : i32 loc(#loc185)
        %86 = tt.descriptor_load %12[%85, %c0_i32] {async_task_id = dense<4> : vector<1xi32>} : !tt.tensordesc<tensor<128x128xbf16>> -> tensor<128x128xbf16> loc(#loc186)
        %87 = tt.trans %86 {async_task_id = dense<2> : vector<1xi32>, order = array<i32: 1, 0>} : tensor<128x128xbf16> -> tensor<128x128xbf16> loc(#loc187)
        %88 = tt.dot %42, %87, %cst_0, inputPrecision = tf32 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xbf16> * tensor<128x128xbf16> -> tensor<64x128xf32> loc(#loc188)
        %89 = tt.dot %50, %87, %cst_0, inputPrecision = tf32 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xbf16> * tensor<128x128xbf16> -> tensor<64x128xf32> loc(#loc189)
        %90 = "tt.reduce"(%88) <{axis = 1 : i32}> ({
        ^bb0(%arg30: f32 loc(callsite(#loc1 at #loc190)), %arg31: f32 loc(callsite(#loc1 at #loc190))):
          %134 = arith.maxnumf %arg30, %arg31 : f32 loc(#loc235)
          tt.reduce.return %134 : f32 loc(#loc227)
        }) : (tensor<64x128xf32>) -> tensor<64xf32> loc(#loc227)
        %91 = tt.splat %35 : f32 -> tensor<64xf32> loc(#loc191)
        %92 = arith.mulf %90, %91 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc191)
        %93 = arith.maxnumf %arg26, %92 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc192)
        %94 = tt.splat %35 : f32 -> tensor<64x128xf32> loc(#loc193)
        %95 = arith.mulf %88, %94 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> loc(#loc193)
        %96 = tt.expand_dims %93 {async_task_id = dense<0> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc194)
        %97 = tt.broadcast %96 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc195)
        %98 = arith.subf %95, %97 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> loc(#loc195)
        %99 = math.exp2 %98 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> loc(#loc196)
        %100 = "tt.reduce"(%99) <{axis = 1 : i32}> ({
        ^bb0(%arg30: f32 loc(callsite(#loc1 at #loc197)), %arg31: f32 loc(callsite(#loc1 at #loc197))):
          %134 = arith.addf %arg30, %arg31 : f32 loc(#loc236)
          tt.reduce.return %134 : f32 loc(#loc229)
        }) : (tensor<64x128xf32>) -> tensor<64xf32> loc(#loc229)
        %101 = arith.subf %arg26, %93 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc198)
        %102 = math.exp2 %101 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc199)
        %103 = arith.mulf %arg24, %102 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc200)
        %104 = arith.addf %103, %100 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc201)
        %105 = tt.expand_dims %102 {async_task_id = dense<0> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc202)
        %106 = tt.broadcast %105 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc203)
        %107 = arith.mulf %arg25, %106 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> loc(#loc203)
        %108 = arith.truncf %99 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> to tensor<64x128xbf16> loc(#loc204)
        %109 = "tt.reduce"(%89) <{axis = 1 : i32}> ({
        ^bb0(%arg30: f32 loc(callsite(#loc1 at #loc205)), %arg31: f32 loc(callsite(#loc1 at #loc205))):
          %134 = arith.maxnumf %arg30, %arg31 : f32 loc(#loc237)
          tt.reduce.return %134 : f32 loc(#loc231)
        }) : (tensor<64x128xf32>) -> tensor<64xf32> loc(#loc231)
        %110 = arith.mulf %109, %91 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc206)
        %111 = arith.maxnumf %arg29, %110 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc207)
        %112 = arith.mulf %89, %94 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> loc(#loc208)
        %113 = tt.expand_dims %111 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc209)
        %114 = tt.broadcast %113 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc210)
        %115 = arith.subf %112, %114 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> loc(#loc210)
        %116 = math.exp2 %115 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> loc(#loc211)
        %117 = "tt.reduce"(%116) <{axis = 1 : i32}> ({
        ^bb0(%arg30: f32 loc(callsite(#loc1 at #loc212)), %arg31: f32 loc(callsite(#loc1 at #loc212))):
          %134 = arith.addf %arg30, %arg31 : f32 loc(#loc238)
          tt.reduce.return %134 : f32 loc(#loc233)
        }) : (tensor<64x128xf32>) -> tensor<64xf32> loc(#loc233)
        %118 = arith.subf %arg29, %111 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc213)
        %119 = math.exp2 %118 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc214)
        %120 = arith.mulf %arg27, %119 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc215)
        %121 = arith.addf %120, %117 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc216)
        %122 = tt.expand_dims %119 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc217)
        %123 = tt.broadcast %122 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc218)
        %124 = arith.mulf %arg28, %123 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> loc(#loc218)
        %125 = arith.truncf %116 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> to tensor<64x128xbf16> loc(#loc219)
        %126 = arith.extsi %arg14 {async_task_id = dense<5> : vector<1xi32>} : i32 to i64 loc(#loc220)
        %127 = arith.divsi %27, %126 {async_task_id = dense<5> : vector<1xi32>} : i64 loc(#loc220)
        %128 = arith.extsi %arg23 {async_task_id = dense<5> : vector<1xi32>} : i32 to i64 loc(#loc221)
        %129 = arith.addi %127, %128 {async_task_id = dense<5> : vector<1xi32>} : i64 loc(#loc221)
        %130 = arith.trunci %129 {async_task_id = dense<5> : vector<1xi32>} : i64 to i32 loc(#loc222)
        %131 = tt.descriptor_load %13[%130, %c0_i32] {async_task_id = dense<5> : vector<1xi32>} : !tt.tensordesc<tensor<128x128xbf16>> -> tensor<128x128xbf16> loc(#loc223)
        %132 = tt.dot %108, %131, %107, inputPrecision = tf32 {async_task_id = dense<3> : vector<1xi32>} : tensor<64x128xbf16> * tensor<128x128xbf16> -> tensor<64x128xf32> loc(#loc224)
        %133 = tt.dot %125, %131, %124, inputPrecision = tf32 {async_task_id = dense<3> : vector<1xi32>} : tensor<64x128xbf16> * tensor<128x128xbf16> -> tensor<64x128xf32> loc(#loc225)
        scf.yield %104, %132, %93, %121, %133, %111 : tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32>, tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32> loc(#loc226)
      } {tt.divisibility_arg1 = dense<128> : tensor<1xi32>} loc(#loc182)
      %52 = math.log2 %51#0 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc155)
      %53 = arith.addf %51#2, %52 {async_task_id = dense<0> : vector<1xi32>} : tensor<64xf32> loc(#loc156)
      %54 = tt.expand_dims %51#0 {async_task_id = dense<0> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc157)
      %55 = tt.broadcast %54 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc158)
      %56 = arith.divf %51#1, %55 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> loc(#loc158)
      %57 = arith.muli %18, %arg20 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc159)
      %58 = tt.addptr %arg4, %57 {async_task_id = dense<0> : vector<1xi32>} : !tt.ptr<f32>, i32 loc(#loc160)
      %59 = tt.splat %58 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc161)
      %60 = tt.addptr %59, %31 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc161)
      tt.store %60, %53 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x!tt.ptr<f32>> loc(#loc162)
      %61 = arith.extsi %arg17 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc163)
      %62 = arith.divsi %27, %61 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc163)
      %63 = arith.addi %62, %39 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc164)
      %64 = arith.trunci %63 {async_task_id = dense<0> : vector<1xi32>} : i64 to i32 loc(#loc165)
      %65 = arith.truncf %56 {async_task_id = dense<0> : vector<1xi32>} : tensor<64x128xf32> to tensor<64x128xbf16> loc(#loc166)
      tt.descriptor_store %15[%64, %c0_i32], %65 {async_task_id = dense<0> : vector<1xi32>} : !tt.tensordesc<tensor<64x128xbf16>>, tensor<64x128xbf16> loc(#loc167)
      %66 = math.log2 %51#3 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc168)
      %67 = arith.addf %51#5, %66 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32> loc(#loc169)
      %68 = tt.expand_dims %51#3 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc170)
      %69 = tt.broadcast %68 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc171)
      %70 = arith.divf %51#4, %69 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> loc(#loc171)
      %71 = arith.muli %18, %arg20 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc172)
      %72 = tt.addptr %arg4, %71 {async_task_id = dense<1> : vector<1xi32>} : !tt.ptr<f32>, i32 loc(#loc173)
      %73 = tt.splat %72 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc174)
      %74 = tt.addptr %73, %34 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc174)
      tt.store %74, %67 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x!tt.ptr<f32>> loc(#loc175)
      %75 = arith.extsi %arg17 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc176)
      %76 = arith.divsi %27, %75 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc176)
      %77 = arith.addi %76, %46 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc177)
      %78 = arith.addi %77, %c64_i64 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc178)
      %79 = arith.trunci %78 {async_task_id = dense<1> : vector<1xi32>} : i64 to i32 loc(#loc179)
      %80 = arith.truncf %70 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32> to tensor<64x128xbf16> loc(#loc180)
      tt.descriptor_store %15[%79, %c0_i32], %80 {async_task_id = dense<1> : vector<1xi32>} : !tt.tensordesc<tensor<64x128xbf16>>, tensor<64x128xbf16> loc(#loc181)
      %81 = arith.addi %arg22, %3 : i32 loc(#loc125)
      scf.yield %81 : i32 loc(#loc126)
    } {tt.num_stages = 1 : i32} loc(#loc20)
    tt.return loc(#loc127)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":40:22)
#loc3 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1602:32)
#loc4 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":40:28)
#loc5 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1603:28)
#loc6 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1604:32)
#loc7 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1605:31)
#loc8 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1605:35)
#loc9 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1607:34)
#loc10 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1608:31)
#loc11 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1608:17)
#loc12 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1608:7)
#loc13 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1609:24)
#loc14 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1615:19)
#loc15 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1615:23)
#loc16 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1614:8)
#loc17 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1628:12)
#loc18 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1635:8)
#loc19 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1641:8)
#loc20 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1647:39)
#loc21 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1651:25)
#loc22 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1652:29)
#loc23 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":879:22)
#loc25 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":880:21)
#loc26 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":881:26)
#loc27 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":881:38)
#loc28 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":881:59)
#loc29 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":881:71)
#loc30 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":881:50)
#loc31 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":923:24)
#loc32 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":923:47)
#loc33 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":923:34)
#loc34 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":924:34)
#loc35 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":924:49)
#loc36 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":935:16)
#loc37 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":941:32)
#loc38 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":941:54)
#loc39 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":941:44)
#loc40 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":941:66)
#loc41 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":941:16)
#loc42 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:32)
#loc43 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:54)
#loc44 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:44)
#loc45 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:64)
#loc46 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:81)
#loc47 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":948:16)
#loc48 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":266:36)
#loc50 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":272:59)
#loc51 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":272:73)
#loc52 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":272:44)
#loc53 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":272:20)
#loc54 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":279:29)
#loc55 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":280:29)
#loc56 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":281:29)
#loc57 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":188:40)
#loc59 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":167:27)
#loc60 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:58)
#loc61 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:41)
#loc62 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:28)
#loc63 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:45)
#loc64 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:39)
#loc65 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":291:30)
#loc66 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":290:36)
#loc68 = loc("/home/mren/MetaMain2/triton/python/triton/language/standard.py":260:15)
#loc69 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":294:41)
#loc70 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":294:34)
#loc71 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":295:26)
#loc72 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":295:35)
#loc73 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":297:33)
#loc74 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":297:26)
#loc75 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":302:27)
#loc77 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":312:58)
#loc78 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":312:41)
#loc79 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":313:28)
#loc80 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":313:45)
#loc81 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":313:39)
#loc82 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":314:30)
#loc84 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":317:41)
#loc85 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":317:34)
#loc86 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":318:26)
#loc87 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":318:35)
#loc88 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":320:33)
#loc89 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":320:26)
#loc90 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":325:27)
#loc91 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":336:40)
#loc92 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":336:52)
#loc93 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":336:64)
#loc94 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":336:24)
#loc95 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":344:33)
#loc96 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":345:33)
#loc97 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":346:8)
#loc98 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1031:29)
#loc99 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1031:16)
#loc100 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1032:27)
#loc101 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1032:22)
#loc102 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1033:31)
#loc103 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1033:22)
#loc104 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1033:39)
#loc105 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1034:26)
#loc106 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1037:32)
#loc107 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1037:44)
#loc108 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1037:66)
#loc109 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1038:24)
#loc110 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1038:16)
#loc111 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1043:29)
#loc112 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1043:16)
#loc113 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1044:27)
#loc114 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1044:22)
#loc115 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1045:31)
#loc116 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1045:22)
#loc117 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1045:39)
#loc118 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1046:26)
#loc119 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1049:32)
#loc120 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1049:44)
#loc121 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1049:64)
#loc122 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1049:81)
#loc123 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1050:24)
#loc124 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1050:16)
#loc125 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1699:20)
#loc126 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1699:8)
#loc127 = loc("/home/mren/OpenSource2/tritonbench/tritonbench/kernels/triton_fused_attention.py":1647:4)
#loc128 = loc(callsite(#loc2 at #loc3))
#loc129 = loc(callsite(#loc4 at #loc3))
#loc130 = loc(callsite(#loc23 at #loc24))
#loc131 = loc(callsite(#loc25 at #loc24))
#loc132 = loc(callsite(#loc26 at #loc24))
#loc133 = loc(callsite(#loc27 at #loc24))
#loc134 = loc(callsite(#loc28 at #loc24))
#loc135 = loc(callsite(#loc29 at #loc24))
#loc136 = loc(callsite(#loc30 at #loc24))
#loc137 = loc(callsite(#loc31 at #loc24))
#loc138 = loc(callsite(#loc32 at #loc24))
#loc139 = loc(callsite(#loc33 at #loc24))
#loc140 = loc(callsite(#loc34 at #loc24))
#loc141 = loc(callsite(#loc35 at #loc24))
#loc142 = loc(callsite(#loc36 at #loc24))
#loc143 = loc(callsite(#loc37 at #loc24))
#loc144 = loc(callsite(#loc38 at #loc24))
#loc145 = loc(callsite(#loc39 at #loc24))
#loc146 = loc(callsite(#loc40 at #loc24))
#loc147 = loc(callsite(#loc41 at #loc24))
#loc148 = loc(callsite(#loc42 at #loc24))
#loc149 = loc(callsite(#loc43 at #loc24))
#loc150 = loc(callsite(#loc44 at #loc24))
#loc151 = loc(callsite(#loc45 at #loc24))
#loc152 = loc(callsite(#loc46 at #loc24))
#loc153 = loc(callsite(#loc47 at #loc24))
#loc155 = loc(callsite(#loc98 at #loc24))
#loc156 = loc(callsite(#loc99 at #loc24))
#loc157 = loc(callsite(#loc100 at #loc24))
#loc158 = loc(callsite(#loc101 at #loc24))
#loc159 = loc(callsite(#loc102 at #loc24))
#loc160 = loc(callsite(#loc103 at #loc24))
#loc161 = loc(callsite(#loc104 at #loc24))
#loc162 = loc(callsite(#loc105 at #loc24))
#loc163 = loc(callsite(#loc106 at #loc24))
#loc164 = loc(callsite(#loc107 at #loc24))
#loc165 = loc(callsite(#loc108 at #loc24))
#loc166 = loc(callsite(#loc109 at #loc24))
#loc167 = loc(callsite(#loc110 at #loc24))
#loc168 = loc(callsite(#loc111 at #loc24))
#loc169 = loc(callsite(#loc112 at #loc24))
#loc170 = loc(callsite(#loc113 at #loc24))
#loc171 = loc(callsite(#loc114 at #loc24))
#loc172 = loc(callsite(#loc115 at #loc24))
#loc173 = loc(callsite(#loc116 at #loc24))
#loc174 = loc(callsite(#loc117 at #loc24))
#loc175 = loc(callsite(#loc118 at #loc24))
#loc176 = loc(callsite(#loc119 at #loc24))
#loc177 = loc(callsite(#loc120 at #loc24))
#loc178 = loc(callsite(#loc121 at #loc24))
#loc179 = loc(callsite(#loc122 at #loc24))
#loc180 = loc(callsite(#loc123 at #loc24))
#loc181 = loc(callsite(#loc124 at #loc24))
#loc182 = loc(callsite(#loc48 at #loc154))
#loc183 = loc(callsite(#loc50 at #loc154))
#loc184 = loc(callsite(#loc51 at #loc154))
#loc185 = loc(callsite(#loc52 at #loc154))
#loc186 = loc(callsite(#loc53 at #loc154))
#loc187 = loc(callsite(#loc54 at #loc154))
#loc188 = loc(callsite(#loc55 at #loc154))
#loc189 = loc(callsite(#loc56 at #loc154))
#loc191 = loc(callsite(#loc60 at #loc154))
#loc192 = loc(callsite(#loc61 at #loc154))
#loc193 = loc(callsite(#loc62 at #loc154))
#loc194 = loc(callsite(#loc63 at #loc154))
#loc195 = loc(callsite(#loc64 at #loc154))
#loc196 = loc(callsite(#loc65 at #loc154))
#loc198 = loc(callsite(#loc69 at #loc154))
#loc199 = loc(callsite(#loc70 at #loc154))
#loc200 = loc(callsite(#loc71 at #loc154))
#loc201 = loc(callsite(#loc72 at #loc154))
#loc202 = loc(callsite(#loc73 at #loc154))
#loc203 = loc(callsite(#loc74 at #loc154))
#loc204 = loc(callsite(#loc75 at #loc154))
#loc206 = loc(callsite(#loc77 at #loc154))
#loc207 = loc(callsite(#loc78 at #loc154))
#loc208 = loc(callsite(#loc79 at #loc154))
#loc209 = loc(callsite(#loc80 at #loc154))
#loc210 = loc(callsite(#loc81 at #loc154))
#loc211 = loc(callsite(#loc82 at #loc154))
#loc213 = loc(callsite(#loc84 at #loc154))
#loc214 = loc(callsite(#loc85 at #loc154))
#loc215 = loc(callsite(#loc86 at #loc154))
#loc216 = loc(callsite(#loc87 at #loc154))
#loc217 = loc(callsite(#loc88 at #loc154))
#loc218 = loc(callsite(#loc89 at #loc154))
#loc219 = loc(callsite(#loc90 at #loc154))
#loc220 = loc(callsite(#loc91 at #loc154))
#loc221 = loc(callsite(#loc92 at #loc154))
#loc222 = loc(callsite(#loc93 at #loc154))
#loc223 = loc(callsite(#loc94 at #loc154))
#loc224 = loc(callsite(#loc95 at #loc154))
#loc225 = loc(callsite(#loc96 at #loc154))
#loc226 = loc(callsite(#loc97 at #loc154))
#loc227 = loc(callsite(#loc57 at #loc190))
#loc229 = loc(callsite(#loc66 at #loc197))
#loc231 = loc(callsite(#loc57 at #loc205))
#loc233 = loc(callsite(#loc66 at #loc212))
#loc235 = loc(callsite(#loc59 at #loc227))
#loc236 = loc(callsite(#loc68 at #loc229))
#loc237 = loc(callsite(#loc59 at #loc231))
#loc238 = loc(callsite(#loc68 at #loc233))
